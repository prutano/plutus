(program
  (let
    (nonrec)
    (datatypebind
      (datatype
        (tyvardecl MyMonoData (type))
        
        MyMonoData_match
        (vardecl MonoA (fun (con integer) (fun (con integer) MyMonoData)))
        (vardecl MonoB (fun (con integer) MyMonoData))
        (vardecl MonoC (fun (con integer) MyMonoData))
      )
    )
    (lam
      ds
      MyMonoData
      [
        [
          [
            { [ MyMonoData_match ds ] (con integer) }
            (lam ds (con integer) (lam b (con integer) b))
          ]
          (lam a (con integer) a)
        ]
        (lam a (con integer) a)
      ]
    )
  )
)